apiVersion: apps/v1
{{- if not .Values.IsDaemonSet}}
kind: Deployment
{{- else }}
kind: DaemonSet
{{- end }}
metadata:
  name: {{ include "agent.fullname" . }}
  labels:
    {{- include "agent.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 1
 {{- if not .Values.IsDaemonSet}}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ tpl (toYaml .Values.config) . | sha256sum }}
        checksum/receivers: {{ tpl (toYaml .Values.receivers) . | sha256sum }}
        "prometheus.io/port": "8888"
        "prometheus.io/scrape": "true"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: {{ include "agent.name" . }}
        {{- include "agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            - --config=/etc/otelcol-contrib/config.yaml
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range $port := .Values.service.ports }}
            - name: {{ $port.name }}
              containerPort: {{ $port.port }}
              protocol: TCP
            {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /var/log
              name: varlog
              readOnly: true
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
            {{- if and .Values.certs (not .Values.externalSecrets.enabled) }}
            - name: certs
              mountPath: "/certs"
            {{- end }}
            {{- if .Values.externalSecrets.enabled }}
            - name: otel-certs
              readOnly: true
              mountPath: "/certs"
            {{- end }}
            - mountPath: /etc/otelcol-contrib/
              name: data
              readOnly: true
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if and .Values.certs (not .Values.externalSecrets.enabled) }}
        - name: certs
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "agent.fullname" . }}-certs
        {{- end }}
        {{- if .Values.externalSecrets.enabled }}
        - name: otel-certs
          secret:
            secretName: {{ .Values.externalSecrets.secretName | default "otel-certs" }}
        {{- end }}
        - name: data
          configMap:
            name: {{ include "agent.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
